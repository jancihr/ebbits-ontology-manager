<?xml version="1.0"?>
<project name="Hello world demo" default="do.all" basedir=".">

    <property name="build.dir" location ="${basedir}/build"/>
    <property name="build.classes.dir" location ="${build.dir}/classes"/>
    <property name="src.dir" location ="${basedir}/src"/>
    <property name="lib.dir" location ="${basedir}/lib"/>
    <property name="build.src.dir" location ="${build.dir}/src"/>
    <property name="build.var.dir" location ="${build.dir}/var"/>
    <property name="codegen.timestamp.file" value="${build.src.dir}/.CODEGEN_DONE"/>

    <property name="wsdl.file" location="${basedir}/wsdl/om.wsdl"/>
    <property name="service.name" value="eu.om.OntologyManager"/> 
    <!-- <property name="service.name" value="eu.om.inertia.InertiaOntologyManager"/> -->
    <property name="server.name" value="eu.om.Server"/>
    <property name="service.jar" value="om.jar"/>

    <property name="cxf.home" location="/home/cxf/binary/apache-cxf-2.7.3"/>
    <property name="cxf.etc.dir" location="${cxf.home}/etc"/>

    <!-- JAX-WS 2.2 and JAXB 2.2 require the API jars to be endorsed -->
    <condition property="cxf.endorsed.dir" value="${cxf.home}/lib/endorsed">
         <available file="${cxf.home}/lib/endorsed" type="dir" property=""/>
     </condition>
     <condition property="cxf.endorsed.flag" value="-Djava.endorsed.dirs=${cxf.endorsed.dir}">
         <available file="${cxf.home}/lib/endorsed" type="dir" property=""/>
     </condition>
     <property name="cxf.endorsed.dir" location="${cxf.home}"/>
     <property name="cxf.endorsed.flag" value="-Dnone=none"/>

     <!-- Set the classpath for the CXF libraries -->
     <path id="cxf.classpath">
         <pathelement location="${basedir}"/>
         <pathelement location="${build.classes.dir}"/>
         <pathelement location="${cxf.home}/lib/cxf-manifest.jar"/>
         <fileset dir="${cxf.endorsed.dir}">
             <include name="*.jar"/>
         </fileset>
		<fileset dir="${cxf.home}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
     </path>


	<!-- package the server to JAR -->
    <target name="archive" 
             description="buils jar archive" depends="do.all">
             <jar jarfile="${service.jar}" basedir="${build.classes.dir}"/>
     </target>
	
    <!-- generate java2wsdl -->
   <target name="j2ws">
      <java classname="org.apache.cxf.tools.java2ws.JavaToWS" fork="true">
         <arg value="-wsdl"/>
         <arg value="-o"/>
         <arg value="${wsdl.file}"/>
         <arg value="${service.name}"/>
         <classpath>
            <path refid="cxf.classpath"/>
         </classpath>
      </java>	
	</target>

    <!-- generate wsdl2java -->
	<target name="ws2j">
		<mkdir dir="${build.src.dir}"/>
		<java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
			<arg value="-verbose"/>
			<arg value="-d"/>
			<arg value="${build.src.dir}"/>
			<arg value="${wsdl.file}"/>
			<classpath>
				<path refid="cxf.classpath"/>
			</classpath>
		</java>

        <javac destdir="${build.classes.dir}" debug="true" fork="true" encoding="utf-8" includeantruntime="false">
            <compilerarg line="-J${cxf.endorsed.flag}"/>
            <src path="${build.src.dir}"/>
            <classpath>
                <path refid="cxf.classpath"/>
            </classpath>
        </javac>
	
	</target>	

	<!-- Compiles all the code.  -->
    <target name="compile">
        <mkdir dir="${build.classes.dir}"/>

        <javac destdir="${build.classes.dir}" debug="true" fork="true" encoding="utf-8" includeantruntime="false">
            <compilerarg line="-J${cxf.endorsed.flag}"/>
            <src path="${src.dir}"/>
            <classpath>
                <path refid="cxf.classpath"/>
            </classpath>
        </javac>

    </target>

    <target name="clean" description="clean">
        <delete dir="${build.classes.dir}"/>
        <delete dir="${build.src.dir}"/>
        <delete dir="${build.var.dir}"/>
        <delete file="${codegen.timestamp.file}"/>
        <delete file="demo.log"/>
        <delete dir="${build.dir}"/>
        <delete file="${wsdl.file}"/>
        <delete file="${service.jar}"/>
        <delete file="demo.log"/>
    </target>

	<!-- testing server/client -->
    <target name="server" description="run demo server">
		<antcall target="do.all"/>
        <cxfrun classname="eu.om.Server"/>
    </target>
    <target name="client" description="run demo client">
        <property name="param" value=""/>
        <cxfrun classname="testing.client.Client"/>
    </target>
	
	<target name="do.all">
		<antcall target="clean"/>
		<antcall target="compile"/>
		<antcall target="j2ws"/>
		<antcall target="ws2j"/>
	</target>
	
    <!-- Sample macrodef for running an application that would include the requirements that CXF needs
        It sets up the classpath and the endorsed dirs and add the logging properties and such --> 
    <macrodef name="cxfrun">
        <attribute name="logging-properties-file" default="${cxf.etc.dir}/logging.properties"/>
        <attribute name="classname"/>
        <attribute name="param1" default=""/>
        <attribute name="param2" default=""/>
        <attribute name="param3" default=""/>
        <attribute name="param4" default=""/>
        <attribute name="param5" default=""/>
        <attribute name="jvmarg1" default="-D' '"/>
        <attribute name="jvmarg2" default="-D' '"/>
        <attribute name="jvmarg3" default="-D' '"/>
        <attribute name="jvmarg4" default="-D' '"/>
        <attribute name="jvmarg5" default="-D' '"/>
        <sequential>
            <java classname="@{classname}" fork="yes">
                <classpath>
                    <path refid="cxf.classpath"/>
                </classpath>
                <arg value="@{param1}"/>
                <arg value="@{param2}"/>
                <arg value="@{param3}"/>
                <arg value="@{param4}"/>
                <arg value="@{param5}"/>
                <jvmarg value="-Dcxf.home=${cxf.home}"/>
                <jvmarg value="${cxf.endorsed.flag}"/>
                <jvmarg value="@{jvmarg1}"/>
                <jvmarg value="@{jvmarg2}"/>
                <jvmarg value="@{jvmarg3}"/>
                <jvmarg value="@{jvmarg4}"/>
                <jvmarg value="@{jvmarg5}"/>
                <sysproperty key="java.util.logging.config.file" value="@{logging-properties-file}"/>
            </java>
        </sequential>
    </macrodef>
	
</project>
